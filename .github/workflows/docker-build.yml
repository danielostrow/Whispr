name: Docker Build and Test

on:
  push:
    branches: [ "main" ]
    tags: [ "v*" ]
  pull_request:
    branches: [ "main" ]

jobs:
  docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      # Ensure vad.c includes stdbool.h
      - name: Fix C extension files
        run: |
          grep -q "#include <stdbool.h>" whispr/c_ext/src/vad.c || sed -i '3a #include <stdbool.h>' whispr/c_ext/src/vad.c
          cat whispr/c_ext/src/vad.c | head -n 10
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build and export
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          load: true
          tags: whispr:test
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Download test audio
        run: |
          mkdir -p test_data
          curl -L -o test_data/test_audio.wav https://filesamples.com/samples/audio/wav/sample1.wav
      
      - name: Test Docker image
        run: |
          mkdir -p output
          docker run --rm -v $(pwd)/test_data:/app/test_data -v $(pwd)/output:/app/output whispr:test /app/test_data/test_audio.wav --output-dir /app/output
          
          # Verify output was generated
          ls -la output/
          if [ ! -f "output/metadata.json" ]; then
            echo "Error: Docker container did not generate expected output files"
            exit 1
          fi
      
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/whispr
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha
      
      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and push
        if: github.event_name != 'pull_request'
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max 